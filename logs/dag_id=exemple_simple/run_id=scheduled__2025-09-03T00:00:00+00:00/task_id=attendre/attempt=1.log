{"timestamp":"2025-09-03T07:08:33.384438","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-03T07:08:33.385108","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/test_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-03T07:08:33.425850Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T07:08:33.425973Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T07:08:33.426186Z","level":"info","event":"Current task name:attendre","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T07:08:33.426273Z","level":"info","event":"Dag name:exemple_simple","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T07:08:33.426732","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-03T07:08:33.429404","level":"info","event":"Running command: ['/usr/bin/bash', '-c', 'sleep 5']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-03T07:08:33.442938","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-03T07:08:38.448214","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-03T07:08:38.449102","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01990e67-be60-7842-8340-dcd0ae62b61d'), task_id='attendre', dag_id='exemple_simple', run_id='scheduled__2025-09-03T00:00:00+00:00', try_number=1, map_index=-1, hostname='a5558eb50d93', context_carrier={}, task=<Task(BashOperator): attendre>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 9, 3, 7, 8, 32, 925141, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/exemple_simple/runs/scheduled__2025-09-03T00%3A00%3A00%2B00%3A00/tasks/attendre?try_number=1')","logger":"task"}
{"timestamp":"2025-09-03T07:08:38.489081Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T07:08:38.489221Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T07:08:38.489605Z","level":"info","event":"Task operator:<Task(BashOperator): attendre>","chan":"stdout","logger":"task"}
